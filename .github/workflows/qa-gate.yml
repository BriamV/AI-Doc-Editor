name: QA Gate

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  qa-validation:
    name: QA System Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for git diff analysis
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Run QA System
        run: yarn run cmd qa
        continue-on-error: false
        
      - name: Upload QA Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: qa-report
          path: qa-report.json
          retention-days: 30
      
      - name: Comment QA Results on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const fs = require('fs');
            
            // Try to read QA report if it exists
            let qaReport = null;
            try {
              if (fs.existsSync('qa-report.json')) {
                qaReport = JSON.parse(fs.readFileSync('qa-report.json', 'utf8'));
              }
            } catch (error) {
              console.log('No QA report found or error reading it');
            }
            
            const comment = qaReport 
              ? `## üîç QA System Results\n\n${qaReport.summary || 'QA validation completed'}`
              : `## üîç QA System Results\n\n‚úÖ QA system is operational and ready for implementation`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });