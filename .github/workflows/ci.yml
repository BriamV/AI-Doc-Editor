name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Lint check
      run: npm run lint
      
    - name: Format check
      run: npm run format:check
      
    - name: Run tests
      run: npm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        fail_ci_if_error: false
        
    - name: Build application
      run: npm run build

    # T-43: Dependency Security Scanning
    - name: Run npm audit (Node.js dependencies)
      run: |
        echo "🔒 Running npm audit for Node.js dependencies..."
        npm audit --audit-level=critical || (echo "❌ Critical vulnerabilities found in npm dependencies" && exit 1)

    - name: Check for pip (Python dependencies)
      id: check-pip
      run: |
        if command -v pip &> /dev/null; then
          echo "pip_available=true" >> $GITHUB_OUTPUT
        else
          echo "pip_available=false" >> $GITHUB_OUTPUT
          echo "ℹ️ pip not available - skipping Python dependency scan"
        fi

    - name: Install pip-audit (if pip available)
      if: steps.check-pip.outputs.pip_available == 'true'
      run: |
        echo "📦 Installing pip-audit..."
        pip install pip-audit

    - name: Run pip-audit (Python dependencies)
      if: steps.check-pip.outputs.pip_available == 'true'
      run: |
        echo "🔒 Running pip-audit for Python dependencies..."
        pip-audit --format=json --output=pip-audit-report.json || (echo "❌ Vulnerabilities found in Python dependencies" && exit 1)

    - name: Generate license report
      run: |
        echo "📋 Generating dependency license report..."
        npm list --depth=0 --json > npm-licenses.json || true
        echo "✅ License report generated: npm-licenses.json"

    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-reports-${{ matrix.node-version }}
        path: |
          npm-licenses.json
          pip-audit-report.json
        retention-days: 30
      
    - name: E2E Tests (Node 20 only)
      if: matrix.node-version == '20.x'
      run: |
        npm run dev &
        npx wait-on http://localhost:5173
        npm run test:e2e
        
  quality-metrics:
    name: Code Quality Metrics
    runs-on: ubuntu-latest
    needs: quality-gate
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate coverage report
      run: npm run test:coverage
      
    - name: Complexity Analysis
      run: |
        echo "Code complexity analysis - tools will be configured later"
        find src -name "*.ts" -o -name "*.tsx" | wc -l
      continue-on-error: true