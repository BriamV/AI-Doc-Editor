name: CI Pipeline

permissions:
  contents: read
  id-token: write

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest



    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Type check
        run: npx tsc --noEmit

      - name: Lint check
        run: yarn lint

      - name: Format check
        run: yarn format:check

      - name: Run tests
        run: yarn test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '20.x'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false

      - name: Build application
        run: yarn build

      # T-43: Dependency Security Scanning
      - name: Run yarn audit (Node.js dependencies)
        run: |
          echo "üîí Running yarn audit for Node.js dependencies..."
          yarn audit --level critical || (echo "‚ùå Critical vulnerabilities found" && exit 1)

      - name: Check for pip (Python dependencies)
        id: check-pip
        run: |
          if command -v pip &> /dev/null; then
            echo "pip_available=true" >> $GITHUB_OUTPUT
          else
            echo "pip_available=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è pip not available - skipping Python scan"
          fi

      - name: Install pip-audit (if pip available)
        if: steps.check-pip.outputs.pip_available == 'true'
        run: |
          echo "üì¶ Installing pip-audit..."
          pip install pip-audit

      - name: Run pip-audit (Python dependencies)
        if: steps.check-pip.outputs.pip_available == 'true'
        run: |
          echo "üîí Running pip-audit for Python dependencies..."
          pip-audit --format=json --output=pip-audit-report.json || (echo "‚ùå Vulnerabilities found" && exit 1)

      - name: Generate license report
        run: |
          echo "üìã Generating dependency license report..."
          yarn list --depth=0 --json > yarn-licenses.json || true

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports-${{ matrix.node-version }}
          path: |
            yarn-licenses.json
            pip-audit-report.json
          retention-days: 30

      - name: E2E Tests (Node 20 only)
        if: matrix.node-version == '20.x'
        run: |
          yarn dev &
          npx wait-on http://localhost:5173
          yarn test:e2e

  quality-metrics:
    name: Code Quality Metrics
    runs-on: ubuntu-latest
    needs: quality-gate
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate coverage report
        run: yarn test:coverage

      - name: Complexity Analysis
        run: |
          echo "üîç Code complexity analysis - placeholder"
          find src -name "*.ts" -o -name "*.tsx" | wc -l
        continue-on-error: true
