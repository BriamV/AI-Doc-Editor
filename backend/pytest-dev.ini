# Development mode pytest configuration
# Faster execution with reduced complexity for development workflow

[tool:pytest]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Development-focused options
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--timeout=30",
    "--timeout-method=thread",
    "--maxfail=3",
    "-x",  # Stop on first failure
    "--durations=5",
    "--durations-min=0.5",
    "--no-cov"  # Skip coverage in dev mode for speed
]

# Simplified markers for development
markers = [
    "slow: marks tests as slow (skipped in dev mode)",
    "unit: unit tests (prioritized in dev mode)",
    "integration: integration tests",
    "security: security tests (skipped in dev mode)",
    "performance: performance tests (skipped in dev mode)"
]

# Filter configuration for development mode
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

# Skip slow tests in development mode
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--timeout=30",
    "--timeout-method=thread",
    "--maxfail=3",
    "-x",
    "--durations=5",
    "--durations-min=0.5",
    "-m", "not slow and not security and not performance"
]